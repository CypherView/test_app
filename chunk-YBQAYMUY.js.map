{"version":3,"sources":["node_modules/primeng/fesm2022/primeng-floatlabel.mjs","src/app/features/auth/components/login/login.component.ts","src/app/features/auth/components/login/login.component.html","src/app/shared/services/network-animation.service.ts","src/app/shared/components/network-animation/network-animation.component.ts","src/app/shared/components/network-animation/network-animation.component.html","src/app/features/auth/components/container/container.component.ts","src/app/features/auth/components/container/container.component.html","src/app/features/auth/components/select-client/select-client.component.ts","src/app/features/auth/components/select-client/select-client.component.html","src/app/features/auth/components/forgot-password/forgot-password.component.ts","src/app/features/auth/components/forgot-password/forgot-password.component.html","src/app/features/auth/auth-routing.module.ts","src/app/features/auth/auth.module.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, Input, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { style } from '@primeuix/styles/floatlabel';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"*\"];\nconst theme = /*css*/`\n    ${style}\n\n    /* For PrimeNG */\n    .p-floatlabel:has(.ng-invalid.ng-dirty) label {\n        color: dt('floatlabel.invalid.color');\n    }\n`;\nconst classes = {\n  root: ({\n    instance\n  }) => ['p-floatlabel', {\n    'p-floatlabel-over': instance.variant === 'over',\n    'p-floatlabel-on': instance.variant === 'on',\n    'p-floatlabel-in': instance.variant === 'in'\n  }]\n};\nclass FloatLabelStyle extends BaseStyle {\n  name = 'floatlabel';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵFloatLabelStyle_BaseFactory;\n    return function FloatLabelStyle_Factory(__ngFactoryType__) {\n      return (ɵFloatLabelStyle_BaseFactory || (ɵFloatLabelStyle_BaseFactory = i0.ɵɵgetInheritedFactory(FloatLabelStyle)))(__ngFactoryType__ || FloatLabelStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: FloatLabelStyle,\n    factory: FloatLabelStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FloatLabelStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * FloatLabel visually integrates a label with its form element.\n *\n * [Live Demo](https://www.primeng.org/floatlabel/)\n *\n * @module floatlabelstyle\n *\n */\nvar FloatLabelClasses;\n(function (FloatLabelClasses) {\n  /**\n   * Class name of the root element\n   */\n  FloatLabelClasses[\"root\"] = \"p-floatlabel\";\n})(FloatLabelClasses || (FloatLabelClasses = {}));\n\n/**\n * FloatLabel appears on top of the input field when focused.\n * @group Components\n */\nclass FloatLabel extends BaseComponent {\n  _componentStyle = inject(FloatLabelStyle);\n  /**\n   * Defines the positioning of the label relative to the input.\n   * @group Props\n   */\n  variant = 'over';\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵFloatLabel_BaseFactory;\n    return function FloatLabel_Factory(__ngFactoryType__) {\n      return (ɵFloatLabel_BaseFactory || (ɵFloatLabel_BaseFactory = i0.ɵɵgetInheritedFactory(FloatLabel)))(__ngFactoryType__ || FloatLabel);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FloatLabel,\n    selectors: [[\"p-floatlabel\"], [\"p-floatLabel\"], [\"p-float-label\"]],\n    hostVars: 2,\n    hostBindings: function FloatLabel_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.cx(\"root\"));\n      }\n    },\n    inputs: {\n      variant: \"variant\"\n    },\n    features: [i0.ɵɵProvidersFeature([FloatLabelStyle]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function FloatLabel_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    dependencies: [CommonModule, SharedModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FloatLabel, [{\n    type: Component,\n    args: [{\n      selector: 'p-floatlabel, p-floatLabel, p-float-label',\n      standalone: true,\n      imports: [CommonModule, SharedModule],\n      template: ` <ng-content></ng-content> `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [FloatLabelStyle],\n      host: {\n        '[class]': \"cx('root')\"\n      }\n    }]\n  }], null, {\n    variant: [{\n      type: Input\n    }]\n  });\n})();\nclass FloatLabelModule {\n  static ɵfac = function FloatLabelModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FloatLabelModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FloatLabelModule,\n    imports: [FloatLabel, SharedModule],\n    exports: [FloatLabel, SharedModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [FloatLabel, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FloatLabelModule, [{\n    type: NgModule,\n    args: [{\n      imports: [FloatLabel, SharedModule],\n      exports: [FloatLabel, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FloatLabel, FloatLabelClasses, FloatLabelModule, FloatLabelStyle };\n","import { Component, DestroyRef, inject, OnInit } from '@angular/core';\nimport {\n  NonNullableFormBuilder,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\n\nimport { FloatLabel } from 'primeng/floatlabel';\nimport { ButtonModule } from 'primeng/button';\nimport { PasswordModule } from 'primeng/password';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { SelectChangeEvent, SelectModule } from 'primeng/select';\n\nimport { AuthService } from '../../../../core/services/auth.service';\nimport { AuthTokenManagerService } from '../../../../core/services/auth-token-manager.service';\nimport { environment } from '../../../../../environments/environment';\nimport { ApiUrlService } from '../../../../core/services/api-url.service';\nimport { UserSessionService } from '../../../../core/services/user-session.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'app-login',\n  imports: [\n    RouterModule,\n    ReactiveFormsModule,\n    FloatLabel,\n    ButtonModule,\n    PasswordModule,\n    InputTextModule,\n    SelectModule,\n  ],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n})\nexport class LoginComponent implements OnInit {\n  private readonly apiUrlService = inject(ApiUrlService);\n  private readonly authService = inject(AuthService);\n  private readonly authTokenManagerService = inject(AuthTokenManagerService);\n  private readonly router = inject(Router);\n  private readonly fb = inject(NonNullableFormBuilder);\n  private readonly userSessionService = inject(UserSessionService);\n  protected readonly destroyRef = inject(DestroyRef);\n\n  readonly environment = environment;\n  readonly apiOptions = environment.apiUrls.map((url) => ({\n    label: url,\n    value: url,\n  }));\n\n  loginForm = this.fb.group({\n    username: this.fb.control('', Validators.required),\n    password: this.fb.control('', Validators.required),\n    apiUrl: this.fb.control('', Validators.required), // Initialize empty or with a placeholder\n  });\n\n  currentYear: number = new Date().getFullYear();\n  loading = false;\n\n  ngOnInit(): void {\n    this.initializeApiUrl();\n  }\n\n  private initializeApiUrl(): void {\n    // If API dropdown is not shown, use the first API URL without showing the dropdown\n    if (!environment.showApiDropdown) {\n      const firstApiUrl = environment.apiUrls[0];\n      if (firstApiUrl) {\n        this.apiUrlService.setApiUrl(firstApiUrl);\n      }\n      return;\n    }\n\n    // Only when API dropdown is enabled, initialize it\n    const currentUrl = this.apiUrlService.getCurrentApiUrl();\n    const firstOptionUrl = this.apiOptions[0]?.value;\n\n    if (!firstOptionUrl) {\n      this.loginForm.controls.apiUrl.disable();\n      return;\n    }\n\n    const isValidOption = this.apiOptions.some(\n      (option) => option.value === currentUrl,\n    );\n\n    let initialApiUrl: string;\n    if (isValidOption) {\n      initialApiUrl = currentUrl;\n    } else {\n      initialApiUrl = firstOptionUrl;\n      this.apiUrlService.setApiUrl(initialApiUrl);\n    }\n\n    this.loginForm.controls.apiUrl.setValue(initialApiUrl);\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.loading = true;\n      const { username, password } = this.loginForm.getRawValue();\n\n      this.authService\n        .login(username, password)\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe({\n          next: (result) => {\n            void (async () => {\n              try {\n                // Step 1: Store initial tokens from login\n                this.authTokenManagerService.storeTokens(result);\n\n                // Step 2: Set user sessions (this will navigate to select-client or main app)\n                // Note: Profile will be loaded by the userProfileResolver when navigating\n                await this.userSessionService.setUserSessions(result.users);\n\n                this.loading = false;\n              } catch (error) {\n                console.error('Login flow error:', error);\n                this.loading = false;\n                this.loginForm.controls.password.reset();\n              }\n            })();\n          },\n          error: () => {\n            this.loading = false;\n            this.loginForm.controls.password.reset();\n          },\n        });\n    }\n  }\n\n  onApiUrlChange(event: SelectChangeEvent) {\n    this.apiUrlService.setApiUrl(event.value);\n  }\n}\n","<div\n  class=\"panel login-box flex flex-col items-stretch w-full max-w-[700px] mx-auto pb-8\"\n>\n  <div class=\"bg-white p-[15px_34px_35px] justify-start rounded-none\">\n    <div class=\"flex flex-col\">\n      <h2\n        class=\"mt-8 text-[1.62rem] font-normal leading-[2.25] text-center !text-gray-500\"\n      >\n        Welcome to Cypherview\n      </h2>\n      <form [formGroup]=\"loginForm\" class=\"mx-12 mt-10\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"grid gap-6\">\n          @if (environment.showApiDropdown) {\n            <p-floatlabel>\n              <label for=\"apiUrl\">API URL*</label>\n              <p-select\n                id=\"apiUrl\"\n                [options]=\"apiOptions\"\n                formControlName=\"apiUrl\"\n                optionLabel=\"label\"\n                optionValue=\"value\"\n                class=\"w-full\"\n                (onChange)=\"onApiUrlChange($event)\"\n              />\n            </p-floatlabel>\n          }\n          <p-floatlabel>\n            <input\n              id=\"username\"\n              pInputText\n              formControlName=\"username\"\n              class=\"w-full\"\n              [autocomplete]=\"'username'\"\n            />\n            <label for=\"username\">Username*</label>\n          </p-floatlabel>\n\n          <p-floatlabel>\n            <p-password\n              formControlName=\"password\"\n              [feedback]=\"false\"\n              [toggleMask]=\"true\"\n              [autocomplete]=\"'current-password'\"\n              class=\"w-full\"\n            />\n            <label for=\"password\">Password*</label>\n          </p-floatlabel>\n        </div>\n\n        <div class=\"flex justify-center items-center my-6\">\n          <p-button\n            styleClass=\"w-[120px] h-[50px] !text-white rounded border-none !bg-[#378bc0]\"\n            type=\"submit\"\n            [disabled]=\"loginForm.invalid\"\n            [loading]=\"loading\"\n          >\n            Login\n          </p-button>\n        </div>\n      </form>\n    </div>\n  </div>\n  <a\n    class=\"!text-white pt-4 underline cursor-pointer self-center\"\n    [routerLink]=\"['/auth/forgot-password']\"\n    >Forgotten Password?</a\n  >\n  <a class=\"!text-white self-center\">\n    Copyright {{ currentYear }}. All rights reserved.\n  </a>\n</div>\n","import { Injectable } from '@angular/core';\nimport { isDefined, isNullOrUndefined, isObject } from '../utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NetworkAnimationService {\n  private canvas!: HTMLCanvasElement;\n  private ctx!: CanvasRenderingContext2D;\n  private particles: Particle[] = [];\n  private animationFrameId?: number;\n  private readonly mouse = { x: 0, y: 0 };\n  private running = false; // Add running flag\n\n  private readonly mouseMoveHandler = (e: MouseEvent) => {\n    const rect = this.canvas.getBoundingClientRect();\n    const scaleX = this.canvas.width / rect.width;\n    const scaleY = this.canvas.height / rect.height;\n\n    this.mouse.x = (e.clientX - rect.left) * scaleX;\n    this.mouse.y = (e.clientY - rect.top) * scaleY;\n  };\n\n  private readonly touchMoveHandler = (e: TouchEvent) => {\n    if (isNullOrUndefined(this.canvas) || !isObject(this.canvas)) return;\n\n    const rect = this.canvas.getBoundingClientRect();\n    const scaleX = this.canvas.width / rect.width;\n    const scaleY = this.canvas.height / rect.height;\n\n    this.mouse.x = (e.touches[0].clientX - rect.left) * scaleX;\n    this.mouse.y = (e.touches[0].clientY - rect.top) * scaleY;\n  };\n\n  private readonly resizeHandler = () => {\n    if (isNullOrUndefined(this.canvas) || !isObject(this.canvas)) return;\n\n    const oldWidth = this.canvas.width;\n    const oldHeight = this.canvas.height;\n\n    this.resizeCanvas();\n\n    // Scale particle positions to new dimensions\n    const scaleX = this.canvas.width / oldWidth;\n    const scaleY = this.canvas.height / oldHeight;\n\n    this.particles.forEach((particle) => {\n      // Scale positions proportionally\n      particle.x *= scaleX;\n      particle.y *= scaleY;\n\n      // Ensure particles stay within bounds\n      if (particle.x < 0) particle.x = 0;\n      if (particle.x > this.canvas.width) particle.x = this.canvas.width;\n      if (particle.y < 0) particle.y = 0;\n      if (particle.y > this.canvas.height) particle.y = this.canvas.height;\n    });\n  };\n\n  initAnimation(canvas: HTMLCanvasElement) {\n    if (isNullOrUndefined(canvas) || !isObject(canvas)) return;\n\n    this.canvas = canvas;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    this.ctx = ctx;\n    this.resizeCanvas();\n\n    window.addEventListener('mousemove', this.mouseMoveHandler);\n    window.addEventListener('touchmove', this.touchMoveHandler, {\n      passive: true,\n    });\n    window.addEventListener('resize', this.resizeHandler);\n\n    this.running = true;\n    this.init();\n  }\n\n  private init() {\n    if (isNullOrUndefined(this.canvas) || isNullOrUndefined(this.ctx)) return;\n\n    // Clear existing particles\n    this.particles = [];\n\n    // Calculate number of particles based on screen size\n    const area = this.canvas.width * this.canvas.height;\n    const baseArea = 1920 * 1080; // Reference screen size\n    const scaleFactor = Math.min(1, area / baseArea);\n\n    // Scale particle counts based on screen size\n    const baseParticles = 200;\n    const baseFloating = 20;\n    const particleCount = Math.floor(baseParticles * scaleFactor);\n    const floatingCount = Math.floor(baseFloating * scaleFactor);\n\n    // Create regular particles\n    for (let i = 0; i < particleCount; i++) {\n      this.particles.push(new Particle(this.canvas, this.particles));\n    }\n\n    // Create floating particles\n    for (let i = 0; i < floatingCount; i++) {\n      this.particles.push(new FloatingParticle(this.canvas, this.particles));\n    }\n\n    this.animate();\n  }\n\n  private resizeCanvas() {\n    // Use window dimensions instead of parent element\n    this.canvas.style.width = '100vw';\n    this.canvas.style.height = '100vh';\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight;\n  }\n\n  private animate() {\n    if (\n      isNullOrUndefined(this.canvas) ||\n      isNullOrUndefined(this.ctx) ||\n      !this.running\n    )\n      return;\n\n    // Create a gradient background\n    const gradient = this.ctx.createLinearGradient(0, 0, 0, this.canvas.height);\n    gradient.addColorStop(0, '#000B1E');\n    gradient.addColorStop(1, '#000000');\n\n    this.ctx.fillStyle = gradient;\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Update and draw particles\n    this.particles.forEach((particle) => {\n      particle.update(this.mouse);\n      particle.draw(this.ctx);\n    });\n\n    // Draw connections\n    this.drawConnections();\n\n    this.animationFrameId = requestAnimationFrame(() => this.animate());\n  }\n\n  private drawConnections() {\n    if (isNullOrUndefined(this.canvas) || isNullOrUndefined(this.ctx)) return;\n\n    for (let i = 0; i < this.particles.length; i++) {\n      for (let j = i + 1; j < this.particles.length; j++) {\n        const dx = this.particles[i].x - this.particles[j].x;\n        const dy = this.particles[i].y - this.particles[j].y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        if (distance > 150 && distance < 350) {\n          const opacity = 1 - (distance - 150) / 100;\n          this.ctx.beginPath();\n          this.ctx.strokeStyle = `rgba(255, 255, 255, ${opacity * 0.3})`;\n          this.ctx.lineWidth = 0.5;\n          this.ctx.moveTo(this.particles[i].x, this.particles[i].y);\n          this.ctx.lineTo(this.particles[j].x, this.particles[j].y);\n          this.ctx.stroke();\n        }\n      }\n    }\n  }\n\n  // Clean up method to cancel animation when needed\n  destroy() {\n    this.running = false; // Set running to false first\n\n    if (isDefined(this.animationFrameId)) {\n      cancelAnimationFrame(this.animationFrameId);\n    }\n\n    window.removeEventListener('mousemove', this.mouseMoveHandler);\n    window.removeEventListener('touchmove', this.touchMoveHandler);\n    window.removeEventListener('resize', this.resizeHandler);\n  }\n}\n\nclass Particle {\n  x: number;\n  y: number;\n  protected speed = 0.25; // Slower speed\n  private direction = Math.random() * Math.PI * 2;\n  private readonly radius = Math.random() * 4.5 + 0.5; // Smaller particles\n  private readonly baseX: number;\n  private readonly baseY: number;\n\n  constructor(\n    protected canvas: HTMLCanvasElement,\n    protected particles: Particle[],\n  ) {\n    this.x = this.baseX = Math.random() * canvas.width;\n    this.y = this.baseY = Math.random() * canvas.height;\n  }\n\n  update(mouse: { x: number; y: number }) {\n    // Normal movement\n    this.x += Math.cos(this.direction) * this.speed;\n    this.y += Math.sin(this.direction) * this.speed;\n\n    // Mouse repulsion - stronger pushing effect\n    const dx = mouse.x - this.x;\n    const dy = mouse.y - this.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (distance < 150) {\n      const force = (200 - distance) / 200;\n      const angle = Math.atan2(dy, dx);\n      this.x -= Math.cos(angle) * force * 5; // Increased force and consistent direction\n      this.y -= Math.sin(angle) * force * 5; // Increased force and consistent direction\n    }\n\n    // Stronger particle-to-particle repulsion\n    this.particles.forEach((otherParticle) => {\n      if (otherParticle !== this) {\n        const pdx = otherParticle.x - this.x;\n        const pdy = otherParticle.y - this.y;\n        const particleDistance = Math.sqrt(pdx * pdx + pdy * pdy);\n\n        if (particleDistance < 100) {\n          // Increased repulsion radius\n          const repulsionForce = (100 - particleDistance) / 100;\n          this.x -= pdx * repulsionForce * 0.1; // Increased force\n          this.y -= pdy * repulsionForce * 0.1; // Increased force\n        }\n      }\n    });\n\n    // Return to boundaries\n    if (this.x < 0 || this.x > this.canvas.width)\n      this.direction = Math.PI - this.direction;\n    if (this.y < 0 || this.y > this.canvas.height)\n      this.direction = -this.direction;\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const gradient = ctx.createRadialGradient(\n      this.x,\n      this.y,\n      0,\n      this.x,\n      this.y,\n      this.radius,\n    );\n    gradient.addColorStop(0, 'rgba(255, 255, 255, 0.5)');\n    gradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    ctx.fillStyle = gradient;\n    ctx.fill();\n  }\n}\n\nclass FloatingParticle extends Particle {\n  private originalX: number;\n  private readonly amplitude = Math.random() * 10 + 1;\n  private readonly period = Math.random() * 0.25 + 0.02;\n  private readonly phase = Math.random() * Math.PI * 2;\n\n  constructor(canvas: HTMLCanvasElement, particles: Particle[]) {\n    super(canvas, particles);\n    this.originalX = this.x;\n    this.speed = 0.01 + Math.random() * 0.2; // Slower upward movement\n  }\n\n  override update(mouse: { x: number; y: number }) {\n    // Gentle upward movement with slight horizontal wave\n    this.y -= this.speed;\n    this.x =\n      this.originalX +\n      Math.sin(this.y * this.period + this.phase) * this.amplitude;\n\n    // Mouse repulsion - stronger pushing effect\n    const dx = mouse.x - this.x;\n    const dy = mouse.y - this.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (distance < 400) {\n      const force = (200 - distance) / 200;\n      const angle = Math.atan2(dy, dx);\n      this.x -= Math.cos(angle) * force * 5;\n      this.y -= Math.sin(angle) * force * 5;\n    }\n\n    // Reset position when reaching top\n    if (this.y < 0) {\n      this.y = this.canvas.height;\n      this.originalX = Math.random() * this.canvas.width;\n    }\n  }\n}\n","import {\n  Component,\n  AfterViewInit,\n  ElementRef,\n  ViewChild,\n  inject,\n} from '@angular/core';\nimport { NetworkAnimationService } from '../../services/network-animation.service';\n\n@Component({\n  selector: 'app-network-animation',\n  templateUrl: './network-animation.component.html',\n  styleUrls: ['./network-animation.component.scss'],\n})\nexport class NetworkAnimationComponent implements AfterViewInit {\n  private networkAnimationService = inject(NetworkAnimationService);\n\n  @ViewChild('canvas') canvasRef!: ElementRef<HTMLCanvasElement>;\n\n  ngAfterViewInit() {\n    this.networkAnimationService.initAnimation(this.canvasRef.nativeElement);\n  }\n}\n","<canvas #canvas class=\"network-animation\"></canvas>\n","import { Component, inject, OnInit, signal } from '@angular/core';\nimport { NavigationEnd, Router, RouterModule } from '@angular/router';\nimport { ButtonModule } from 'primeng/button';\nimport { filter } from 'rxjs';\nimport { NetworkAnimationComponent } from '../../../../shared/components/network-animation/network-animation.component';\n\n@Component({\n  selector: 'app-container',\n  imports: [RouterModule, ButtonModule, NetworkAnimationComponent],\n  templateUrl: './container.component.html',\n  styleUrl: './container.component.scss',\n})\nexport class ContainerComponent implements OnInit {\n  isRouteActive = signal(false);\n  private readonly router = inject(Router);\n\n  ngOnInit(): void {\n    this.router.navigate(['/auth/login']).catch(() => {});\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.isRouteActive.set(this.router.url !== '/auth');\n      });\n  }\n}\n","<div class=\"wrapper bg-cover bg-center h-screen\">\n  <app-network-animation></app-network-animation>\n  <div class=\"flex flex-col items-center h-auto sm:h-full\">\n    <img\n      class=\"logo-filter w-1/2 my-16 max-w-[1050px] hidden sm:block\"\n      src=\"assets/images/logo.svg\"\n      alt=\"Cypherview logo\"\n    />\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component, inject, signal } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserSessionService } from '../../../../core/services/user-session.service';\nimport { ClientSelectorComponent } from '../../../../shared/components/client-selector/client-selector.component';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { AuthService as ApiAuthService } from '../../../../api';\nimport { AuthTokenManagerService } from '../../../../core/services/auth-token-manager.service';\nimport { firstValueFrom } from 'rxjs';\n\n@Component({\n  selector: 'app-select-client',\n  templateUrl: './select-client.component.html',\n  styleUrls: ['./select-client.component.scss'],\n  standalone: true,\n  imports: [ClientSelectorComponent, CommonModule, ButtonModule],\n})\nexport class SelectClientComponent {\n  private readonly userSessionService = inject(UserSessionService);\n  private readonly router = inject(Router);\n  private readonly apiAuthService = inject(ApiAuthService);\n  private readonly authTokenManager = inject(AuthTokenManagerService);\n\n  accounts = this.userSessionService.userSessions();\n  loading = signal(false);\n\n  async onAccountSelected(accountId: string): Promise<boolean> {\n    this.loading.set(true);\n\n    try {\n      const response = await firstValueFrom(\n        this.apiAuthService.selectUser(accountId),\n      );\n\n      this.authTokenManager.storeTokens({\n        accessToken: response.accessToken,\n        refreshToken: response.refreshToken,\n        idToken: response.idToken ?? '',\n        users: this.accounts, // Keep existing user sessions\n      });\n\n      this.userSessionService.setCurrentUserSession(accountId);\n\n      this.loading.set(false);\n      return this.router.navigate(['/position']);\n    } catch (error) {\n      console.error('Error selecting user:', error);\n      this.loading.set(false);\n      // Stay on selection page if error occurs\n      return false;\n    }\n  }\n\n  cancel(): Promise<boolean> {\n    this.userSessionService.clearAllSessions();\n    return this.router.navigate(['/auth/login']);\n  }\n}\n","<div\n  class=\"panel login-box flex flex-col items-stretch w-full max-w-[700px] mx-auto pb-8\"\n>\n  <div class=\"bg-white p-[15px_34px_35px] justify-start rounded-none\">\n    <div class=\"select-client-wrapper\">\n      <div class=\"select-client-card\">\n        <div class=\"header\">\n          <h2\n            class=\"mt-8 text-[1.62rem] font-normal leading-[2.25] text-center !text-gray-500\"\n          >\n            Select an Account\n          </h2>\n        </div>\n        <app-client-selector\n          [clientAccounts]=\"accounts\"\n          [maxHeightClass]=\"'max-h-[18rem]'\"\n          (accountSelected)=\"onAccountSelected($event.id)\"\n        ></app-client-selector>\n\n        <div class=\"actions mt-6 flex justify-center\">\n          <p-button\n            label=\"Cancel\"\n            styleClass=\"w-[120px] h-[50px] !text-white rounded border-none !bg-[#378bc0]\"\n            (onClick)=\"cancel()\"\n          ></p-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, DestroyRef, inject, OnInit } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport {\n  ReactiveFormsModule,\n  NonNullableFormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ButtonModule } from 'primeng/button';\nimport { FloatLabel } from 'primeng/floatlabel';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { SelectModule, SelectChangeEvent } from 'primeng/select';\nimport { environment } from '../../../../../environments/environment';\nimport { AuthService } from '../../../../api';\nimport { ApiUrlService } from '../../../../core/services/api-url.service';\nimport { ToastService } from '../../../../core/services/toast.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  imports: [\n    RouterModule,\n    ReactiveFormsModule,\n    FloatLabel,\n    ButtonModule,\n    InputTextModule,\n    SelectModule,\n  ],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss',\n})\nexport class ForgotPasswordComponent implements OnInit {\n  private readonly apiUrlService = inject(ApiUrlService);\n  private readonly authService = inject(AuthService);\n  private readonly fb = inject(NonNullableFormBuilder);\n  protected readonly destroyRef = inject(DestroyRef);\n  private readonly toastService = inject(ToastService);\n\n  readonly environment = environment;\n  readonly apiOptions = environment.apiUrls.map((url) => ({\n    label: url,\n    value: url,\n  }));\n\n  resetPasswordForm = this.fb.group({\n    username: this.fb.control('', Validators.required),\n    resetUrl: this.fb.control('', Validators.required), // Initialize empty or with a placeholder\n  });\n\n  currentYear: number = new Date().getFullYear();\n  loading = false;\n  submitted = false;\n  submittedUsername = '';\n\n  ngOnInit(): void {\n    this.initializeApiUrl();\n  }\n\n  private initializeApiUrl(): void {\n    // If API dropdown is not shown, use the first API URL without showing the dropdown\n    if (!environment.showApiDropdown) {\n      const firstApiUrl = environment.apiUrls[0];\n      if (firstApiUrl) {\n        this.apiUrlService.setApiUrl(firstApiUrl);\n      }\n      return;\n    }\n\n    // Only when API dropdown is enabled, initialize it\n    const currentUrl = this.apiUrlService.getCurrentApiUrl();\n    const firstOptionUrl = this.apiOptions[0]?.value;\n\n    if (!firstOptionUrl) {\n      this.resetPasswordForm.controls.resetUrl.disable();\n      return;\n    }\n\n    const isValidOption = this.apiOptions.some(\n      (option) => option.value === currentUrl,\n    );\n\n    let initialApiUrl: string;\n    if (isValidOption) {\n      initialApiUrl = currentUrl;\n    } else {\n      initialApiUrl = firstOptionUrl;\n      this.apiUrlService.setApiUrl(initialApiUrl);\n    }\n\n    this.resetPasswordForm.controls.resetUrl.setValue(initialApiUrl);\n  }\n\n  onSubmit() {\n    if (this.resetPasswordForm.valid) {\n      this.loading = true;\n      const { username, resetUrl } = this.resetPasswordForm.getRawValue();\n\n      this.authService\n        .resetPassword({ username, resetUrl })\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe({\n          next: () => {\n            this.loading = false;\n            this.submitted = true;\n            this.submittedUsername = username;\n            this.toastService.showSuccess(\n              'Success',\n              'Password reset instructions sent.',\n            );\n          },\n          error: () => {\n            this.loading = false;\n          },\n        });\n    }\n  }\n\n  onApiUrlChange(event: SelectChangeEvent) {\n    this.apiUrlService.setApiUrl(event.value);\n  }\n}\n","<div\n  class=\"panel login-box flex flex-col items-stretch w-full max-w-[700px] mx-auto pb-8\"\n>\n  <div class=\"bg-white p-[15px_34px_35px] justify-start rounded-none mb-4\">\n    <div class=\"flex flex-col\">\n      @if (!submitted) {\n        <h2\n          class=\"mt-8 text-[1.62rem] font-normal leading-[2.25] text-center !text-gray-500\"\n        >\n          Forgot Your Password\n        </h2>\n        <span\n          class=\"my-4 text-[1rem] font-normal leading-[1.5] text-center !text-gray-500\"\n          >Enter your email address below and we'll send your password reset\n          instructions by email.</span\n        >\n        <form\n          [formGroup]=\"resetPasswordForm\"\n          class=\"mx-12 mt-10\"\n          (ngSubmit)=\"onSubmit()\"\n        >\n          <div class=\"grid gap-6\">\n            @if (environment.showApiDropdown) {\n              <p-floatlabel>\n                <label for=\"resetUrl\">API URL*</label>\n                <p-select\n                  id=\"resetUrl\"\n                  [options]=\"apiOptions\"\n                  formControlName=\"resetUrl\"\n                  optionLabel=\"label\"\n                  optionValue=\"value\"\n                  class=\"w-full\"\n                  (onChange)=\"onApiUrlChange($event)\"\n                />\n              </p-floatlabel>\n            }\n            <p-floatlabel>\n              <input\n                id=\"username\"\n                pInputText\n                formControlName=\"username\"\n                class=\"w-full\"\n                [autocomplete]=\"'username'\"\n              />\n              <label for=\"username\">Username*</label>\n            </p-floatlabel>\n          </div>\n\n          <div class=\"flex justify-center items-center my-6\">\n            <p-button\n              styleClass=\"w-[120px] h-[50px] !text-white rounded border-none !bg-[#378bc0]\"\n              type=\"submit\"\n              [disabled]=\"resetPasswordForm.invalid\"\n              [loading]=\"loading\"\n            >\n              Reset Password\n            </p-button>\n          </div>\n        </form>\n      } @else {\n        <h2\n          class=\"mt-8 text-[1.62rem] font-normal leading-[2.25] text-center !text-gray-500\"\n        >\n          Check Your Email\n        </h2>\n        <div class=\"mx-12 mt-10 mb-6 text-center\">\n          <p class=\"mb-6 text-[1rem] font-normal leading-[1.5] !text-gray-500\">\n            If an account exists with the username\n            <strong>{{ submittedUsername }}</strong\n            >, you will receive a password reset email shortly. Please check\n            your inbox and follow the instructions to reset your password.\n          </p>\n          <p-button\n            styleClass=\"w-[160px] h-[50px] !text-white rounded border-none !bg-[#378bc0]\"\n            [routerLink]=\"['/auth/login']\"\n          >\n            Back to Login\n          </p-button>\n        </div>\n      }\n    </div>\n  </div>\n  @if (!submitted) {\n    <a\n      class=\"!text-white underline cursor-pointer self-center\"\n      [routerLink]=\"['/auth/login']\"\n      >Login</a\n    >\n  }\n  <a class=\"!text-white self-center\">\n    Copyright {{ currentYear }}. All rights reserved.\n  </a>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { ContainerComponent } from './components/container/container.component';\nimport { SelectClientComponent } from './components/select-client/select-client.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContainerComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'select-client', component: SelectClientComponent },\n      { path: 'forgot-password', component: ForgotPasswordComponent },\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, AuthRoutingModule],\n})\nexport class AuthModule {}\n"],"mappings":"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","names":["FloatLabelClasses","_c0","AuthService","_c0","AuthService"],"x_google_ignoreList":[0]}