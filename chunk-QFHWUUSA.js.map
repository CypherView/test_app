{
  "version": 3,
  "sources": ["src/app/shared/components/client-selector/client-selector.component.ts", "src/app/shared/components/client-selector/client-selector.component.html"],
  "sourcesContent": ["import { CommonModule } from '@angular/common';\nimport { Component, computed, input, output } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { debounceTime, map, startWith } from 'rxjs';\nimport { AuthUserResponse } from '../../../api';\nimport { IconField } from 'primeng/iconfield';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { InputIcon } from 'primeng/inputicon';\n\n@Component({\n  selector: 'app-client-selector',\n  templateUrl: './client-selector.component.html',\n  styleUrls: ['./client-selector.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IconField,\n    InputTextModule,\n    InputIcon,\n  ],\n})\nexport class ClientSelectorComponent {\n  clientAccounts = input<AuthUserResponse[]>([]);\n  maxHeightClass = input<string>('max-h-96');\n  accountSelected = output<AuthUserResponse>();\n  searchControl = new FormControl<string>('');\n  filteredAccounts = computed(() => {\n    const term = this.searchTerm().toLowerCase();\n    return this.clientAccounts().filter(\n      (account) =>\n        account.name.toLowerCase().includes(term) ||\n        (account?.owner?.name ?? '').toLowerCase().includes(term) ||\n        (account?.owner?.type ?? '').toLowerCase().includes(term),\n    );\n  });\n  private readonly searchTerm = toSignal(\n    this.searchControl.valueChanges.pipe(\n      startWith(''),\n      debounceTime(300),\n      map((value) => value ?? ''),\n    ),\n    { initialValue: '' },\n  );\n\n  selectAccount(accountId: string): void {\n    const selected = this.clientAccounts().find(\n      (account) => account.id === accountId,\n    );\n    if (selected) {\n      this.accountSelected.emit(selected);\n    }\n  }\n}\n", "<div class=\"w-full\">\n  <div class=\"p-inputgroup\">\n    <p-iconfield>\n      <input\n        #searchInput\n        type=\"text\"\n        pInputText\n        [formControl]=\"searchControl\"\n        placeholder=\"Search accounts...\"\n        class=\"w-full\"\n      />\n      <p-inputicon class=\"pi pi-search\" />\n    </p-iconfield>\n  </div>\n</div>\n<div\n  [class]=\"\n    'flex flex-col gap-3 w-full overflow-y-auto rounded bg-white mt-3 ' +\n    maxHeightClass()\n  \"\n>\n  @for (account of filteredAccounts(); track $index) {\n    <div\n      class=\"flex items-center justify-between p-4 gap-3 hover:bg-gray-100 hover:shadow-sm cursor-pointer transition\"\n      (click)=\"selectAccount(account.id)\"\n      (keydown.enter)=\"selectAccount(account.id)\"\n    >\n      <div class=\"flex gap-3 justify-center\">\n        <div\n          class=\"w-10 h-10 rounded-full account-avatar text-white flex items-center justify-center font-semibold text-lg flex-shrink-0\"\n        >\n          {{ account.name.charAt(0).toUpperCase() }}\n        </div>\n        <div class=\"flex flex-col gap-1\">\n          <div class=\"font-semibold text-xl\">{{ account.name }}</div>\n          <div class=\"text-sm text-gray-600\">\n            {{ account.owner.type | titlecase }}: {{ account.owner.name }}\n          </div>\n        </div>\n      </div>\n      <div class=\"account-select-icon\">\n        <i class=\"pi pi-arrow-right\"></i>\n      </div>\n    </div>\n  }\n  @if (filteredAccounts().length === 0) {\n    <div class=\"text-center py-8 text-gray-600\">No accounts found.</div>\n  }\n</div>\n"],
  "mappings": "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",
  "names": []
}
