{
  "version": 3,
  "sources": ["src/app/features/administration/components/distributors/distributor-container/distributor-container.component.ts", "src/app/features/administration/components/distributors/distributor-container/distributor-container.component.html", "src/app/features/administration/components/distributors/distributors-routing.module.ts", "src/app/features/administration/components/distributors/distributors.module.ts"],
  "sourcesContent": ["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  HostBinding,\n  inject,\n  OnInit,\n  signal,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Data,\n  NavigationEnd,\n  Router,\n  RouterModule,\n} from '@angular/router';\n\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { filter, map } from 'rxjs';\n\nimport { TabConfig } from '../../../../../shared/models/tabs.model';\nimport { DynamicTabPanelComponent } from '../../../../../shared/components/tabs/dynamic-tab-panel/dynamic-tab-panel.component';\nimport { EntityDetailsService } from '../../../services/entity/entity-details.service';\nimport { isDefined } from '../../../../../shared/utils';\n\n@Component({\n  selector: 'app-distributor-container',\n  imports: [DynamicTabPanelComponent, RouterModule],\n  templateUrl: './distributor-container.component.html',\n  styleUrl: './distributor-container.component.scss',\n})\nexport class DistributorContainerComponent implements AfterViewInit, OnInit {\n  @ViewChild('main') mainTemplate!: TemplateRef<unknown>;\n  distributorTabs: TabConfig[] = [\n    { id: 'details', label: 'Details', route: 'details', level: 0 },\n    { id: 'vendors', label: 'Vendors', route: 'vendors', level: 0 },\n    {\n      id: 'providers',\n      label: 'Providers',\n      level: 0,\n      children: [\n        {\n          id: 'distributor-device-providers',\n          label: 'Device Providers',\n          route: 'providers/distributor-device-providers',\n          level: 1,\n        },\n        {\n          id: 'distributor-email-providers',\n          label: 'Email Providers',\n          route: 'providers/distributor-email-providers',\n          level: 1,\n        },\n      ],\n    },\n    {\n      id: 'profiles',\n      label: 'Profiles',\n      level: 0,\n      children: [\n        {\n          id: 'distributor-company-groups',\n          label: 'Vendor Groups',\n          route: 'profiles/distributor-company-groups',\n          level: 1,\n        },\n        {\n          id: 'distributor-road-profiles',\n          label: 'Road Profiles',\n          route: 'profiles/distributor-road-profiles',\n          level: 1,\n        },\n        {\n          id: 'distributor-themes',\n          label: 'Themes',\n          route: 'profiles/distributor-themes',\n          level: 1,\n        },\n      ],\n    },\n    {\n      id: 'accounts',\n      label: 'Accounts',\n      level: 0,\n      children: [\n        {\n          id: 'distributor-users',\n          label: 'Users',\n          route: 'accounts/distributor-users',\n          level: 1,\n        },\n        {\n          id: 'distributor-user-roles',\n          label: 'User Roles',\n          route: 'accounts/distributor-user-roles',\n          level: 1,\n        },\n      ],\n    },\n  ];\n\n  readonly detailsService = inject(EntityDetailsService);\n  private readonly cdr = inject(ChangeDetectorRef);\n  private readonly router = inject(Router);\n  private readonly activatedRoute = inject(ActivatedRoute);\n  private readonly destroyRef = inject(DestroyRef);\n  readonly isContentScrollable = signal<boolean>(false); // Signal to control styling\n\n  @HostBinding('class.content-scrollable-inactive')\n  get contentScrollableActive(): boolean {\n    return !this.isContentScrollable();\n  }\n\n  ngAfterViewInit() {\n    this.applyTemplateToTabs(this.distributorTabs, this.mainTemplate);\n    this.cdr.detectChanges();\n  }\n\n  private applyTemplateToTabs(\n    tabs: TabConfig[],\n    template: TemplateRef<unknown>,\n  ) {\n    for (const tab of tabs) {\n      tab.template = template;\n      if (tab.children) {\n        this.applyTemplateToTabs(tab.children, template);\n      }\n    }\n  }\n\n  onTabChange() {\n    this.detailsService.closeDetailsPanel();\n  }\n\n  ngOnInit(): void {\n    // Function to get scrollable state from route\n    const getScrollableState = (route: ActivatedRoute): boolean => {\n      let currentRoute = route;\n      while (currentRoute.firstChild) {\n        currentRoute = currentRoute.firstChild;\n      }\n      const routeData: Data = currentRoute.snapshot.data;\n      if (\n        isDefined(routeData) &&\n        typeof routeData['nestedContentScrollable'] === 'boolean'\n      ) {\n        return routeData['nestedContentScrollable'];\n      }\n      return false; // Default to false\n    };\n\n    // Set initial state\n    this.isContentScrollable.set(getScrollableState(this.activatedRoute));\n    this.cdr.detectChanges(); // Ensure initial class binding is applied\n\n    // Subscribe to subsequent navigation events\n    this.router.events\n      .pipe(\n        filter(\n          (event): event is NavigationEnd => event instanceof NavigationEnd,\n        ),\n        map(() => getScrollableState(this.activatedRoute)), // Reuse the logic\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe((scrollableValue: boolean) => {\n        if (this.isContentScrollable() !== scrollableValue) {\n          this.isContentScrollable.set(scrollableValue);\n          this.cdr.detectChanges(); // Explicitly trigger change detection if needed\n        }\n      });\n  }\n}\n", "<div class=\"w-full h-full\">\n  <app-dynamic-tab-panel\n    [tabs]=\"distributorTabs\"\n    (tabChange)=\"onTabChange()\"\n    styleClass=\"h-full overflow-hidden\"\n  ></app-dynamic-tab-panel>\n</div>\n\n<ng-template #main>\n  <router-outlet></router-outlet>\n</ng-template>\n", "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGridContainerComponent } from '../admin-grid-container/admin-grid-container.component';\nimport { createGuardedGridRoute } from '../../../../shared/utils';\nimport { vendorsGuard } from '../../guards';\nimport { DistributorContainerComponent } from './distributor-container/distributor-container.component';\nimport { AdminTreetableContainerComponent } from '../admin-treetable-container/admin-treetable-container.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DistributorContainerComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'details',\n        pathMatch: 'full',\n      },\n      {\n        path: 'details',\n        loadChildren: () =>\n          import('./distributor-details/distributor-details.module').then(\n            (m) => m.DistributorDetailsModule,\n          ),\n        data: { nestedContentScrollable: true },\n      },\n      {\n        path: 'providers',\n        children: [\n          {\n            path: '',\n            redirectTo: 'distributor-device-providers',\n            pathMatch: 'full',\n          },\n          {\n            path: ':type',\n            component: AdminGridContainerComponent,\n          },\n        ],\n      },\n      {\n        path: 'profiles',\n        children: [\n          {\n            path: '',\n            redirectTo: 'distributor-company-groups',\n            pathMatch: 'full',\n          },\n          {\n            path: 'distributor-company-groups',\n            component: AdminTreetableContainerComponent,\n            data: { type: 'distributor-company-groups' },\n          },\n          {\n            path: 'distributor-company-groups/:entityType/:entityId',\n            component: AdminTreetableContainerComponent,\n            data: { type: 'distributor-company-groups' },\n          },\n          {\n            path: ':type',\n            component: AdminGridContainerComponent,\n          },\n          {\n            path: ':type/:entityType/:entityId',\n            component: AdminGridContainerComponent,\n          },\n        ],\n      },\n      {\n        path: 'accounts',\n        children: [\n          {\n            path: '',\n            redirectTo: 'distributor-users',\n            pathMatch: 'full',\n          },\n          {\n            path: ':type',\n            component: AdminGridContainerComponent,\n          },\n          {\n            path: ':type/:entityType/:entityId',\n            component: AdminGridContainerComponent,\n          },\n        ],\n      },\n      ...createGuardedGridRoute(\n        'vendors',\n        vendorsGuard,\n        AdminGridContainerComponent,\n      ),\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DistributorsRoutingModule {}\n", "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DistributorsRoutingModule } from './distributors-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, DistributorsRoutingModule],\n})\nexport class DistributorsModule {}\n"],
  "mappings": "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",
  "names": []
}
